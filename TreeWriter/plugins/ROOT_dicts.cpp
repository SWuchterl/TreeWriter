//
// File generated by rootcint at Fri Mar 20 14:49:40 2015

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME ROOT_dicts
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "ROOT_dicts.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
      namespace tree {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::tree::Particle Particle;
      #else
      class Particle  {
         public:
         //friend XX;
         ::TVector3 p; //
      };
      #endif
      } 
      namespace tree {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::tree::Photon Photon;
      #else
      class Photon  :  public ::tree::Particle {
         public:
         //friend XX;
         float full5x5_sigmaIetaIeta; //
         float hOverE; //
         int hasPixelSeed; //
         int passElectronVeto; //
         float isoChargedHadrons; //
         float isoNeutralHadrons; //
         float isoPhotons; //
         float isoChargedHadronsWithEA; //
         float isoNeutralHadronsWithEA; //
         float isoPhotonsWithEA; //
         float scRawEnergy; //
         float isoWorstChargedHadrons; //
         float r9; //
         float full5x5_sigmaIetaIphi; //
         float full5x5_e1x3; //
         float full5x5_e2x2; //
         float full5x5_e2x5Max; //
         float full5x5_e5x5; //
         float sigma_eta; //
         float sigma_phi; //
         float esEffSigmaRR; //
         float esEnergy; //
         float mvaValue; //
         int isTrue; //
         int isTrueAlternative; //
         bool isLoose; //
         bool isMedium; //
         bool isTight; //
      };
      #endif
      } 
      namespace tree {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::tree::Jet Jet;
      #else
      class Jet  :  public ::tree::Particle {
         public:
         //friend XX;
         float bCSV; //
         float chargedHadronEnergy; //
         float neutralHadronEnergy; //
         float photonEnergy; //
         float electronEnergy; //
         float muonEnergy; //
         float HFHadronEnergy; //
         float HFEMEnergy; //
         float chargedEmEnergy; //
         float chargedMuEnergy; //
         float neutralEmEnergy; //
      };
      #endif
      } 
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void treecLcLParticle_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void treecLcLParticle_Dictionary();
   static void *new_treecLcLParticle(void *p = 0);
   static void *newArray_treecLcLParticle(Long_t size, void *p);
   static void delete_treecLcLParticle(void *p);
   static void deleteArray_treecLcLParticle(void *p);
   static void destruct_treecLcLParticle(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::tree::Particle*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::tree::Particle) == sizeof(::ROOT::Shadow::tree::Particle));
      ::tree::Particle *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::tree::Particle),0);
      static ::ROOT::TGenericClassInfo 
         instance("tree::Particle", "./TreeParticles.hpp", 10,
                  typeid(::tree::Particle), DefineBehavior(ptr, ptr),
                  &treecLcLParticle_ShowMembers, &treecLcLParticle_Dictionary, isa_proxy, 4,
                  sizeof(::tree::Particle) );
      instance.SetNew(&new_treecLcLParticle);
      instance.SetNewArray(&newArray_treecLcLParticle);
      instance.SetDelete(&delete_treecLcLParticle);
      instance.SetDeleteArray(&deleteArray_treecLcLParticle);
      instance.SetDestructor(&destruct_treecLcLParticle);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::tree::Particle*)
   {
      return GenerateInitInstanceLocal((::tree::Particle*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::tree::Particle*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void treecLcLParticle_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::tree::Particle*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void treecLcLPhoton_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void treecLcLPhoton_Dictionary();
   static void *new_treecLcLPhoton(void *p = 0);
   static void *newArray_treecLcLPhoton(Long_t size, void *p);
   static void delete_treecLcLPhoton(void *p);
   static void deleteArray_treecLcLPhoton(void *p);
   static void destruct_treecLcLPhoton(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::tree::Photon*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::tree::Photon) == sizeof(::ROOT::Shadow::tree::Photon));
      ::tree::Photon *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::tree::Photon),0);
      static ::ROOT::TGenericClassInfo 
         instance("tree::Photon", "./TreeParticles.hpp", 16,
                  typeid(::tree::Photon), DefineBehavior(ptr, ptr),
                  &treecLcLPhoton_ShowMembers, &treecLcLPhoton_Dictionary, isa_proxy, 4,
                  sizeof(::tree::Photon) );
      instance.SetNew(&new_treecLcLPhoton);
      instance.SetNewArray(&newArray_treecLcLPhoton);
      instance.SetDelete(&delete_treecLcLPhoton);
      instance.SetDeleteArray(&deleteArray_treecLcLPhoton);
      instance.SetDestructor(&destruct_treecLcLPhoton);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::tree::Photon*)
   {
      return GenerateInitInstanceLocal((::tree::Photon*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::tree::Photon*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void treecLcLPhoton_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::tree::Photon*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void treecLcLJet_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void treecLcLJet_Dictionary();
   static void *new_treecLcLJet(void *p = 0);
   static void *newArray_treecLcLJet(Long_t size, void *p);
   static void delete_treecLcLJet(void *p);
   static void deleteArray_treecLcLJet(void *p);
   static void destruct_treecLcLJet(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::tree::Jet*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::tree::Jet) == sizeof(::ROOT::Shadow::tree::Jet));
      ::tree::Jet *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::tree::Jet),0);
      static ::ROOT::TGenericClassInfo 
         instance("tree::Jet", "./TreeParticles.hpp", 57,
                  typeid(::tree::Jet), DefineBehavior(ptr, ptr),
                  &treecLcLJet_ShowMembers, &treecLcLJet_Dictionary, isa_proxy, 4,
                  sizeof(::tree::Jet) );
      instance.SetNew(&new_treecLcLJet);
      instance.SetNewArray(&newArray_treecLcLJet);
      instance.SetDelete(&delete_treecLcLJet);
      instance.SetDeleteArray(&deleteArray_treecLcLJet);
      instance.SetDestructor(&destruct_treecLcLJet);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::tree::Jet*)
   {
      return GenerateInitInstanceLocal((::tree::Jet*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::tree::Jet*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void treecLcLJet_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::tree::Jet*)0x0)->GetClass();
   }

} // end of namespace ROOT

//______________________________________________________________________________
namespace ROOT {
   void treecLcLParticle_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class tree::Particle.
      typedef ::ROOT::Shadow::tree::Particle ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::tree::Particle*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "p", &sobj->p);
      R__insp.InspectMember(sobj->p, "p.");
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_treecLcLParticle(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::tree::Particle : new ::tree::Particle;
   }
   static void *newArray_treecLcLParticle(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::tree::Particle[nElements] : new ::tree::Particle[nElements];
   }
   // Wrapper around operator delete
   static void delete_treecLcLParticle(void *p) {
      delete ((::tree::Particle*)p);
   }
   static void deleteArray_treecLcLParticle(void *p) {
      delete [] ((::tree::Particle*)p);
   }
   static void destruct_treecLcLParticle(void *p) {
      typedef ::tree::Particle current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::tree::Particle

//______________________________________________________________________________
namespace ROOT {
   void treecLcLPhoton_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class tree::Photon.
      typedef ::ROOT::Shadow::tree::Photon ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::tree::Photon*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "full5x5_sigmaIetaIeta", &sobj->full5x5_sigmaIetaIeta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hOverE", &sobj->hOverE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hasPixelSeed", &sobj->hasPixelSeed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "passElectronVeto", &sobj->passElectronVeto);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isoChargedHadrons", &sobj->isoChargedHadrons);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isoNeutralHadrons", &sobj->isoNeutralHadrons);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isoPhotons", &sobj->isoPhotons);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isoChargedHadronsWithEA", &sobj->isoChargedHadronsWithEA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isoNeutralHadronsWithEA", &sobj->isoNeutralHadronsWithEA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isoPhotonsWithEA", &sobj->isoPhotonsWithEA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scRawEnergy", &sobj->scRawEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isoWorstChargedHadrons", &sobj->isoWorstChargedHadrons);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "r9", &sobj->r9);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "full5x5_sigmaIetaIphi", &sobj->full5x5_sigmaIetaIphi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "full5x5_e1x3", &sobj->full5x5_e1x3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "full5x5_e2x2", &sobj->full5x5_e2x2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "full5x5_e2x5Max", &sobj->full5x5_e2x5Max);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "full5x5_e5x5", &sobj->full5x5_e5x5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigma_eta", &sobj->sigma_eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigma_phi", &sobj->sigma_phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "esEffSigmaRR", &sobj->esEffSigmaRR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "esEnergy", &sobj->esEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mvaValue", &sobj->mvaValue);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isTrue", &sobj->isTrue);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isTrueAlternative", &sobj->isTrueAlternative);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isLoose", &sobj->isLoose);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isMedium", &sobj->isMedium);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isTight", &sobj->isTight);
      R__insp.GenericShowMembers("tree::Particle", ( ::tree::Particle * )( (::tree::Photon*) obj ), false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_treecLcLPhoton(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::tree::Photon : new ::tree::Photon;
   }
   static void *newArray_treecLcLPhoton(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::tree::Photon[nElements] : new ::tree::Photon[nElements];
   }
   // Wrapper around operator delete
   static void delete_treecLcLPhoton(void *p) {
      delete ((::tree::Photon*)p);
   }
   static void deleteArray_treecLcLPhoton(void *p) {
      delete [] ((::tree::Photon*)p);
   }
   static void destruct_treecLcLPhoton(void *p) {
      typedef ::tree::Photon current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::tree::Photon

//______________________________________________________________________________
namespace ROOT {
   void treecLcLJet_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class tree::Jet.
      typedef ::ROOT::Shadow::tree::Jet ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::tree::Jet*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bCSV", &sobj->bCSV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chargedHadronEnergy", &sobj->chargedHadronEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "neutralHadronEnergy", &sobj->neutralHadronEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "photonEnergy", &sobj->photonEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "electronEnergy", &sobj->electronEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "muonEnergy", &sobj->muonEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HFHadronEnergy", &sobj->HFHadronEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HFEMEnergy", &sobj->HFEMEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chargedEmEnergy", &sobj->chargedEmEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chargedMuEnergy", &sobj->chargedMuEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "neutralEmEnergy", &sobj->neutralEmEnergy);
      R__insp.GenericShowMembers("tree::Particle", ( ::tree::Particle * )( (::tree::Jet*) obj ), false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_treecLcLJet(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::tree::Jet : new ::tree::Jet;
   }
   static void *newArray_treecLcLJet(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::tree::Jet[nElements] : new ::tree::Jet[nElements];
   }
   // Wrapper around operator delete
   static void delete_treecLcLJet(void *p) {
      delete ((::tree::Jet*)p);
   }
   static void deleteArray_treecLcLJet(void *p) {
      delete [] ((::tree::Jet*)p);
   }
   static void destruct_treecLcLJet(void *p) {
      typedef ::tree::Jet current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::tree::Jet

namespace ROOT {
   void vectorlEtreecLcLJetgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEtreecLcLJetgR_Dictionary();
   static void *new_vectorlEtreecLcLJetgR(void *p = 0);
   static void *newArray_vectorlEtreecLcLJetgR(Long_t size, void *p);
   static void delete_vectorlEtreecLcLJetgR(void *p);
   static void deleteArray_vectorlEtreecLcLJetgR(void *p);
   static void destruct_vectorlEtreecLcLJetgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<tree::Jet>*)
   {
      vector<tree::Jet> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<tree::Jet>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<tree::Jet>", -2, "prec_stl/vector", 49,
                  typeid(vector<tree::Jet>), DefineBehavior(ptr, ptr),
                  0, &vectorlEtreecLcLJetgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<tree::Jet>) );
      instance.SetNew(&new_vectorlEtreecLcLJetgR);
      instance.SetNewArray(&newArray_vectorlEtreecLcLJetgR);
      instance.SetDelete(&delete_vectorlEtreecLcLJetgR);
      instance.SetDeleteArray(&deleteArray_vectorlEtreecLcLJetgR);
      instance.SetDestructor(&destruct_vectorlEtreecLcLJetgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<tree::Jet> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<tree::Jet>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEtreecLcLJetgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<tree::Jet>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEtreecLcLJetgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<tree::Jet> : new vector<tree::Jet>;
   }
   static void *newArray_vectorlEtreecLcLJetgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<tree::Jet>[nElements] : new vector<tree::Jet>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEtreecLcLJetgR(void *p) {
      delete ((vector<tree::Jet>*)p);
   }
   static void deleteArray_vectorlEtreecLcLJetgR(void *p) {
      delete [] ((vector<tree::Jet>*)p);
   }
   static void destruct_vectorlEtreecLcLJetgR(void *p) {
      typedef vector<tree::Jet> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<tree::Jet>

namespace ROOT {
   void vectorlEtreecLcLParticlegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEtreecLcLParticlegR_Dictionary();
   static void *new_vectorlEtreecLcLParticlegR(void *p = 0);
   static void *newArray_vectorlEtreecLcLParticlegR(Long_t size, void *p);
   static void delete_vectorlEtreecLcLParticlegR(void *p);
   static void deleteArray_vectorlEtreecLcLParticlegR(void *p);
   static void destruct_vectorlEtreecLcLParticlegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<tree::Particle>*)
   {
      vector<tree::Particle> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<tree::Particle>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<tree::Particle>", -2, "prec_stl/vector", 49,
                  typeid(vector<tree::Particle>), DefineBehavior(ptr, ptr),
                  0, &vectorlEtreecLcLParticlegR_Dictionary, isa_proxy, 4,
                  sizeof(vector<tree::Particle>) );
      instance.SetNew(&new_vectorlEtreecLcLParticlegR);
      instance.SetNewArray(&newArray_vectorlEtreecLcLParticlegR);
      instance.SetDelete(&delete_vectorlEtreecLcLParticlegR);
      instance.SetDeleteArray(&deleteArray_vectorlEtreecLcLParticlegR);
      instance.SetDestructor(&destruct_vectorlEtreecLcLParticlegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<tree::Particle> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<tree::Particle>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEtreecLcLParticlegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<tree::Particle>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEtreecLcLParticlegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<tree::Particle> : new vector<tree::Particle>;
   }
   static void *newArray_vectorlEtreecLcLParticlegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<tree::Particle>[nElements] : new vector<tree::Particle>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEtreecLcLParticlegR(void *p) {
      delete ((vector<tree::Particle>*)p);
   }
   static void deleteArray_vectorlEtreecLcLParticlegR(void *p) {
      delete [] ((vector<tree::Particle>*)p);
   }
   static void destruct_vectorlEtreecLcLParticlegR(void *p) {
      typedef vector<tree::Particle> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<tree::Particle>

namespace ROOT {
   void vectorlEtreecLcLPhotongR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEtreecLcLPhotongR_Dictionary();
   static void *new_vectorlEtreecLcLPhotongR(void *p = 0);
   static void *newArray_vectorlEtreecLcLPhotongR(Long_t size, void *p);
   static void delete_vectorlEtreecLcLPhotongR(void *p);
   static void deleteArray_vectorlEtreecLcLPhotongR(void *p);
   static void destruct_vectorlEtreecLcLPhotongR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<tree::Photon>*)
   {
      vector<tree::Photon> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<tree::Photon>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<tree::Photon>", -2, "prec_stl/vector", 49,
                  typeid(vector<tree::Photon>), DefineBehavior(ptr, ptr),
                  0, &vectorlEtreecLcLPhotongR_Dictionary, isa_proxy, 4,
                  sizeof(vector<tree::Photon>) );
      instance.SetNew(&new_vectorlEtreecLcLPhotongR);
      instance.SetNewArray(&newArray_vectorlEtreecLcLPhotongR);
      instance.SetDelete(&delete_vectorlEtreecLcLPhotongR);
      instance.SetDeleteArray(&deleteArray_vectorlEtreecLcLPhotongR);
      instance.SetDestructor(&destruct_vectorlEtreecLcLPhotongR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<tree::Photon> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<tree::Photon>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEtreecLcLPhotongR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<tree::Photon>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEtreecLcLPhotongR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<tree::Photon> : new vector<tree::Photon>;
   }
   static void *newArray_vectorlEtreecLcLPhotongR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<tree::Photon>[nElements] : new vector<tree::Photon>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEtreecLcLPhotongR(void *p) {
      delete ((vector<tree::Photon>*)p);
   }
   static void deleteArray_vectorlEtreecLcLPhotongR(void *p) {
      delete [] ((vector<tree::Photon>*)p);
   }
   static void destruct_vectorlEtreecLcLPhotongR(void *p) {
      typedef vector<tree::Photon> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<tree::Photon>

/********************************************************
* ROOT_dicts.cpp
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableROOT_dicts();

extern "C" void G__set_cpp_environmentROOT_dicts() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("TreeParticles.hpp");
  G__cpp_reset_tagtableROOT_dicts();
}
#include <new>
extern "C" int G__cpp_dllrevROOT_dicts() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* tree::Particle */
// automatic default constructor
static int G__ROOT_dicts_226_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   tree::Particle *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new tree::Particle[n];
     } else {
       p = new((void*) gvp) tree::Particle[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new tree::Particle;
     } else {
       p = new((void*) gvp) tree::Particle;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROOT_dictsLN_treecLcLParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ROOT_dicts_226_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   tree::Particle* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new tree::Particle(*(tree::Particle*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROOT_dictsLN_treecLcLParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef tree::Particle G__TtreecLcLParticle;
static int G__ROOT_dicts_226_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (tree::Particle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((tree::Particle*) (soff+(sizeof(tree::Particle)*i)))->~G__TtreecLcLParticle();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (tree::Particle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((tree::Particle*) (soff))->~G__TtreecLcLParticle();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ROOT_dicts_226_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   tree::Particle* dest = (tree::Particle*) G__getstructoffset();
   *dest = *(tree::Particle*) libp->para[0].ref;
   const tree::Particle& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* tree::Photon */
// automatic default constructor
static int G__ROOT_dicts_227_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   tree::Photon *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new tree::Photon[n];
     } else {
       p = new((void*) gvp) tree::Photon[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new tree::Photon;
     } else {
       p = new((void*) gvp) tree::Photon;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROOT_dictsLN_treecLcLPhoton));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ROOT_dicts_227_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   tree::Photon* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new tree::Photon(*(tree::Photon*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROOT_dictsLN_treecLcLPhoton));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef tree::Photon G__TtreecLcLPhoton;
static int G__ROOT_dicts_227_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (tree::Photon*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((tree::Photon*) (soff+(sizeof(tree::Photon)*i)))->~G__TtreecLcLPhoton();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (tree::Photon*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((tree::Photon*) (soff))->~G__TtreecLcLPhoton();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ROOT_dicts_227_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   tree::Photon* dest = (tree::Photon*) G__getstructoffset();
   *dest = *(tree::Photon*) libp->para[0].ref;
   const tree::Photon& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* tree::Jet */
// automatic default constructor
static int G__ROOT_dicts_228_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   tree::Jet *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new tree::Jet[n];
     } else {
       p = new((void*) gvp) tree::Jet[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new tree::Jet;
     } else {
       p = new((void*) gvp) tree::Jet;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROOT_dictsLN_treecLcLJet));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ROOT_dicts_228_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   tree::Jet* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new tree::Jet(*(tree::Jet*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROOT_dictsLN_treecLcLJet));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef tree::Jet G__TtreecLcLJet;
static int G__ROOT_dicts_228_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (tree::Jet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((tree::Jet*) (soff+(sizeof(tree::Jet)*i)))->~G__TtreecLcLJet();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (tree::Jet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((tree::Jet*) (soff))->~G__TtreecLcLJet();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ROOT_dicts_228_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   tree::Jet* dest = (tree::Jet*) G__getstructoffset();
   *dest = *(tree::Jet*) libp->para[0].ref;
   const tree::Jet& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<tree::Photon,allocator<tree::Photon> > */
static int G__ROOT_dicts_230_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<tree::Photon,allocator<tree::Photon> >::reference obj = ((vector<tree::Photon,allocator<tree::Photon> >*) G__getstructoffset())->at((vector<tree::Photon,allocator<tree::Photon> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_230_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<tree::Photon,allocator<tree::Photon> >::const_reference obj = ((const vector<tree::Photon,allocator<tree::Photon> >*) G__getstructoffset())->at((vector<tree::Photon,allocator<tree::Photon> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_230_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<tree::Photon,allocator<tree::Photon> >::iterator* pobj;
         vector<tree::Photon,allocator<tree::Photon> >::iterator xobj = ((vector<tree::Photon,allocator<tree::Photon> >*) G__getstructoffset())->begin();
         pobj = new vector<tree::Photon,allocator<tree::Photon> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_230_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<tree::Photon,allocator<tree::Photon> >::iterator* pobj;
         vector<tree::Photon,allocator<tree::Photon> >::iterator xobj = ((vector<tree::Photon,allocator<tree::Photon> >*) G__getstructoffset())->end();
         pobj = new vector<tree::Photon,allocator<tree::Photon> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_230_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<tree::Photon,allocator<tree::Photon> >::reverse_iterator* pobj;
         vector<tree::Photon,allocator<tree::Photon> >::reverse_iterator xobj = ((vector<tree::Photon,allocator<tree::Photon> >*) G__getstructoffset())->rbegin();
         pobj = new vector<tree::Photon,allocator<tree::Photon> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_230_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<tree::Photon,allocator<tree::Photon> >::reverse_iterator* pobj;
         vector<tree::Photon,allocator<tree::Photon> >::reverse_iterator xobj = ((vector<tree::Photon,allocator<tree::Photon> >*) G__getstructoffset())->rend();
         pobj = new vector<tree::Photon,allocator<tree::Photon> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_230_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<tree::Photon,allocator<tree::Photon> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_230_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<tree::Photon,allocator<tree::Photon> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_230_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<tree::Photon,allocator<tree::Photon> >*) G__getstructoffset())->resize((vector<tree::Photon,allocator<tree::Photon> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_230_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<tree::Photon,allocator<tree::Photon> >*) G__getstructoffset())->resize((vector<tree::Photon,allocator<tree::Photon> >::size_type) G__int(libp->para[0]), *((tree::Photon*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_230_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<tree::Photon,allocator<tree::Photon> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_230_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<tree::Photon,allocator<tree::Photon> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_230_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<tree::Photon,allocator<tree::Photon> >::reference obj = ((vector<tree::Photon,allocator<tree::Photon> >*) G__getstructoffset())->operator[]((vector<tree::Photon,allocator<tree::Photon> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_230_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<tree::Photon,allocator<tree::Photon> >::const_reference obj = ((const vector<tree::Photon,allocator<tree::Photon> >*) G__getstructoffset())->operator[]((vector<tree::Photon,allocator<tree::Photon> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_230_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<tree::Photon,allocator<tree::Photon> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<tree::Photon,allocator<tree::Photon> >[n];
     } else {
       p = new((void*) gvp) vector<tree::Photon,allocator<tree::Photon> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<tree::Photon,allocator<tree::Photon> >;
     } else {
       p = new((void*) gvp) vector<tree::Photon,allocator<tree::Photon> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLPhotoncOallocatorlEtreecLcLPhotongRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_230_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<tree::Photon,allocator<tree::Photon> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<tree::Photon,allocator<tree::Photon> >((vector<tree::Photon,allocator<tree::Photon> >::size_type) G__int(libp->para[0]), *(tree::Photon*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<tree::Photon,allocator<tree::Photon> >((vector<tree::Photon,allocator<tree::Photon> >::size_type) G__int(libp->para[0]), *(tree::Photon*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<tree::Photon,allocator<tree::Photon> >((vector<tree::Photon,allocator<tree::Photon> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<tree::Photon,allocator<tree::Photon> >((vector<tree::Photon,allocator<tree::Photon> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLPhotoncOallocatorlEtreecLcLPhotongRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_230_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<tree::Photon,allocator<tree::Photon> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<tree::Photon,allocator<tree::Photon> >(*(vector<tree::Photon,allocator<tree::Photon> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<tree::Photon,allocator<tree::Photon> >(*(vector<tree::Photon,allocator<tree::Photon> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLPhotoncOallocatorlEtreecLcLPhotongRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_230_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<tree::Photon,allocator<tree::Photon> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<tree::Photon,allocator<tree::Photon> >(*((vector<tree::Photon,allocator<tree::Photon> >::const_iterator*) G__int(libp->para[0])), *((vector<tree::Photon,allocator<tree::Photon> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<tree::Photon,allocator<tree::Photon> >(*((vector<tree::Photon,allocator<tree::Photon> >::const_iterator*) G__int(libp->para[0])), *((vector<tree::Photon,allocator<tree::Photon> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLPhotoncOallocatorlEtreecLcLPhotongRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_230_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<tree::Photon,allocator<tree::Photon> >& obj = ((vector<tree::Photon,allocator<tree::Photon> >*) G__getstructoffset())->operator=(*(vector<tree::Photon,allocator<tree::Photon> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_230_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<tree::Photon,allocator<tree::Photon> >*) G__getstructoffset())->reserve((vector<tree::Photon,allocator<tree::Photon> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_230_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const tree::Photon& obj = ((vector<tree::Photon,allocator<tree::Photon> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_230_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const tree::Photon& obj = ((vector<tree::Photon,allocator<tree::Photon> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_230_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<tree::Photon,allocator<tree::Photon> >*) G__getstructoffset())->push_back(*(tree::Photon*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_230_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<tree::Photon,allocator<tree::Photon> >*) G__getstructoffset())->swap(*(vector<tree::Photon,allocator<tree::Photon> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_230_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<tree::Photon,allocator<tree::Photon> >::iterator* pobj;
         vector<tree::Photon,allocator<tree::Photon> >::iterator xobj = ((vector<tree::Photon,allocator<tree::Photon> >*) G__getstructoffset())->insert(*((vector<tree::Photon,allocator<tree::Photon> >::iterator*) G__int(libp->para[0])), *(tree::Photon*) libp->para[1].ref);
         pobj = new vector<tree::Photon,allocator<tree::Photon> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_230_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<tree::Photon,allocator<tree::Photon> >*) G__getstructoffset())->insert(*((vector<tree::Photon,allocator<tree::Photon> >::iterator*) G__int(libp->para[0])), *((vector<tree::Photon,allocator<tree::Photon> >::const_iterator*) G__int(libp->para[1]))
, *((vector<tree::Photon,allocator<tree::Photon> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_230_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<tree::Photon,allocator<tree::Photon> >*) G__getstructoffset())->insert(*((vector<tree::Photon,allocator<tree::Photon> >::iterator*) G__int(libp->para[0])), (vector<tree::Photon,allocator<tree::Photon> >::size_type) G__int(libp->para[1])
, *(tree::Photon*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_230_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<tree::Photon,allocator<tree::Photon> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_230_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<tree::Photon,allocator<tree::Photon> >*) G__getstructoffset())->erase(*((vector<tree::Photon,allocator<tree::Photon> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_230_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<tree::Photon,allocator<tree::Photon> >*) G__getstructoffset())->erase(*((vector<tree::Photon,allocator<tree::Photon> >::iterator*) G__int(libp->para[0])), *((vector<tree::Photon,allocator<tree::Photon> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_230_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<tree::Photon,allocator<tree::Photon> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<tree::Photon,allocator<tree::Photon> > G__TvectorlEtreecLcLPhotoncOallocatorlEtreecLcLPhotongRsPgR;
static int G__ROOT_dicts_230_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<tree::Photon,allocator<tree::Photon> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<tree::Photon,allocator<tree::Photon> >*) (soff+(sizeof(vector<tree::Photon,allocator<tree::Photon> >)*i)))->~G__TvectorlEtreecLcLPhotoncOallocatorlEtreecLcLPhotongRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<tree::Photon,allocator<tree::Photon> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<tree::Photon,allocator<tree::Photon> >*) (soff))->~G__TvectorlEtreecLcLPhotoncOallocatorlEtreecLcLPhotongRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<tree::Particle,allocator<tree::Particle> > */
static int G__ROOT_dicts_234_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<tree::Particle,allocator<tree::Particle> >::reference obj = ((vector<tree::Particle,allocator<tree::Particle> >*) G__getstructoffset())->at((vector<tree::Particle,allocator<tree::Particle> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_234_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<tree::Particle,allocator<tree::Particle> >::const_reference obj = ((const vector<tree::Particle,allocator<tree::Particle> >*) G__getstructoffset())->at((vector<tree::Particle,allocator<tree::Particle> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_234_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<tree::Particle,allocator<tree::Particle> >::iterator* pobj;
         vector<tree::Particle,allocator<tree::Particle> >::iterator xobj = ((vector<tree::Particle,allocator<tree::Particle> >*) G__getstructoffset())->begin();
         pobj = new vector<tree::Particle,allocator<tree::Particle> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_234_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<tree::Particle,allocator<tree::Particle> >::iterator* pobj;
         vector<tree::Particle,allocator<tree::Particle> >::iterator xobj = ((vector<tree::Particle,allocator<tree::Particle> >*) G__getstructoffset())->end();
         pobj = new vector<tree::Particle,allocator<tree::Particle> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_234_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<tree::Particle,allocator<tree::Particle> >::reverse_iterator* pobj;
         vector<tree::Particle,allocator<tree::Particle> >::reverse_iterator xobj = ((vector<tree::Particle,allocator<tree::Particle> >*) G__getstructoffset())->rbegin();
         pobj = new vector<tree::Particle,allocator<tree::Particle> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_234_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<tree::Particle,allocator<tree::Particle> >::reverse_iterator* pobj;
         vector<tree::Particle,allocator<tree::Particle> >::reverse_iterator xobj = ((vector<tree::Particle,allocator<tree::Particle> >*) G__getstructoffset())->rend();
         pobj = new vector<tree::Particle,allocator<tree::Particle> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_234_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<tree::Particle,allocator<tree::Particle> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_234_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<tree::Particle,allocator<tree::Particle> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_234_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<tree::Particle,allocator<tree::Particle> >*) G__getstructoffset())->resize((vector<tree::Particle,allocator<tree::Particle> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_234_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<tree::Particle,allocator<tree::Particle> >*) G__getstructoffset())->resize((vector<tree::Particle,allocator<tree::Particle> >::size_type) G__int(libp->para[0]), *((tree::Particle*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_234_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<tree::Particle,allocator<tree::Particle> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_234_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<tree::Particle,allocator<tree::Particle> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_234_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<tree::Particle,allocator<tree::Particle> >::reference obj = ((vector<tree::Particle,allocator<tree::Particle> >*) G__getstructoffset())->operator[]((vector<tree::Particle,allocator<tree::Particle> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_234_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<tree::Particle,allocator<tree::Particle> >::const_reference obj = ((const vector<tree::Particle,allocator<tree::Particle> >*) G__getstructoffset())->operator[]((vector<tree::Particle,allocator<tree::Particle> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_234_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<tree::Particle,allocator<tree::Particle> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<tree::Particle,allocator<tree::Particle> >[n];
     } else {
       p = new((void*) gvp) vector<tree::Particle,allocator<tree::Particle> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<tree::Particle,allocator<tree::Particle> >;
     } else {
       p = new((void*) gvp) vector<tree::Particle,allocator<tree::Particle> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLParticlecOallocatorlEtreecLcLParticlegRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_234_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<tree::Particle,allocator<tree::Particle> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<tree::Particle,allocator<tree::Particle> >((vector<tree::Particle,allocator<tree::Particle> >::size_type) G__int(libp->para[0]), *(tree::Particle*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<tree::Particle,allocator<tree::Particle> >((vector<tree::Particle,allocator<tree::Particle> >::size_type) G__int(libp->para[0]), *(tree::Particle*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<tree::Particle,allocator<tree::Particle> >((vector<tree::Particle,allocator<tree::Particle> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<tree::Particle,allocator<tree::Particle> >((vector<tree::Particle,allocator<tree::Particle> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLParticlecOallocatorlEtreecLcLParticlegRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_234_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<tree::Particle,allocator<tree::Particle> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<tree::Particle,allocator<tree::Particle> >(*(vector<tree::Particle,allocator<tree::Particle> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<tree::Particle,allocator<tree::Particle> >(*(vector<tree::Particle,allocator<tree::Particle> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLParticlecOallocatorlEtreecLcLParticlegRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_234_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<tree::Particle,allocator<tree::Particle> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<tree::Particle,allocator<tree::Particle> >(*((vector<tree::Particle,allocator<tree::Particle> >::const_iterator*) G__int(libp->para[0])), *((vector<tree::Particle,allocator<tree::Particle> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<tree::Particle,allocator<tree::Particle> >(*((vector<tree::Particle,allocator<tree::Particle> >::const_iterator*) G__int(libp->para[0])), *((vector<tree::Particle,allocator<tree::Particle> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLParticlecOallocatorlEtreecLcLParticlegRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_234_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<tree::Particle,allocator<tree::Particle> >& obj = ((vector<tree::Particle,allocator<tree::Particle> >*) G__getstructoffset())->operator=(*(vector<tree::Particle,allocator<tree::Particle> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_234_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<tree::Particle,allocator<tree::Particle> >*) G__getstructoffset())->reserve((vector<tree::Particle,allocator<tree::Particle> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_234_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const tree::Particle& obj = ((vector<tree::Particle,allocator<tree::Particle> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_234_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const tree::Particle& obj = ((vector<tree::Particle,allocator<tree::Particle> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_234_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<tree::Particle,allocator<tree::Particle> >*) G__getstructoffset())->push_back(*(tree::Particle*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_234_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<tree::Particle,allocator<tree::Particle> >*) G__getstructoffset())->swap(*(vector<tree::Particle,allocator<tree::Particle> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_234_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<tree::Particle,allocator<tree::Particle> >::iterator* pobj;
         vector<tree::Particle,allocator<tree::Particle> >::iterator xobj = ((vector<tree::Particle,allocator<tree::Particle> >*) G__getstructoffset())->insert(*((vector<tree::Particle,allocator<tree::Particle> >::iterator*) G__int(libp->para[0])), *(tree::Particle*) libp->para[1].ref);
         pobj = new vector<tree::Particle,allocator<tree::Particle> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_234_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<tree::Particle,allocator<tree::Particle> >*) G__getstructoffset())->insert(*((vector<tree::Particle,allocator<tree::Particle> >::iterator*) G__int(libp->para[0])), *((vector<tree::Particle,allocator<tree::Particle> >::const_iterator*) G__int(libp->para[1]))
, *((vector<tree::Particle,allocator<tree::Particle> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_234_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<tree::Particle,allocator<tree::Particle> >*) G__getstructoffset())->insert(*((vector<tree::Particle,allocator<tree::Particle> >::iterator*) G__int(libp->para[0])), (vector<tree::Particle,allocator<tree::Particle> >::size_type) G__int(libp->para[1])
, *(tree::Particle*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_234_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<tree::Particle,allocator<tree::Particle> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_234_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<tree::Particle,allocator<tree::Particle> >*) G__getstructoffset())->erase(*((vector<tree::Particle,allocator<tree::Particle> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_234_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<tree::Particle,allocator<tree::Particle> >*) G__getstructoffset())->erase(*((vector<tree::Particle,allocator<tree::Particle> >::iterator*) G__int(libp->para[0])), *((vector<tree::Particle,allocator<tree::Particle> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_234_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<tree::Particle,allocator<tree::Particle> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<tree::Particle,allocator<tree::Particle> > G__TvectorlEtreecLcLParticlecOallocatorlEtreecLcLParticlegRsPgR;
static int G__ROOT_dicts_234_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<tree::Particle,allocator<tree::Particle> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<tree::Particle,allocator<tree::Particle> >*) (soff+(sizeof(vector<tree::Particle,allocator<tree::Particle> >)*i)))->~G__TvectorlEtreecLcLParticlecOallocatorlEtreecLcLParticlegRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<tree::Particle,allocator<tree::Particle> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<tree::Particle,allocator<tree::Particle> >*) (soff))->~G__TvectorlEtreecLcLParticlecOallocatorlEtreecLcLParticlegRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<tree::Jet,allocator<tree::Jet> > */
static int G__ROOT_dicts_238_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<tree::Jet,allocator<tree::Jet> >::reference obj = ((vector<tree::Jet,allocator<tree::Jet> >*) G__getstructoffset())->at((vector<tree::Jet,allocator<tree::Jet> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_238_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<tree::Jet,allocator<tree::Jet> >::const_reference obj = ((const vector<tree::Jet,allocator<tree::Jet> >*) G__getstructoffset())->at((vector<tree::Jet,allocator<tree::Jet> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_238_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<tree::Jet,allocator<tree::Jet> >::iterator* pobj;
         vector<tree::Jet,allocator<tree::Jet> >::iterator xobj = ((vector<tree::Jet,allocator<tree::Jet> >*) G__getstructoffset())->begin();
         pobj = new vector<tree::Jet,allocator<tree::Jet> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_238_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<tree::Jet,allocator<tree::Jet> >::iterator* pobj;
         vector<tree::Jet,allocator<tree::Jet> >::iterator xobj = ((vector<tree::Jet,allocator<tree::Jet> >*) G__getstructoffset())->end();
         pobj = new vector<tree::Jet,allocator<tree::Jet> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_238_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<tree::Jet,allocator<tree::Jet> >::reverse_iterator* pobj;
         vector<tree::Jet,allocator<tree::Jet> >::reverse_iterator xobj = ((vector<tree::Jet,allocator<tree::Jet> >*) G__getstructoffset())->rbegin();
         pobj = new vector<tree::Jet,allocator<tree::Jet> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_238_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<tree::Jet,allocator<tree::Jet> >::reverse_iterator* pobj;
         vector<tree::Jet,allocator<tree::Jet> >::reverse_iterator xobj = ((vector<tree::Jet,allocator<tree::Jet> >*) G__getstructoffset())->rend();
         pobj = new vector<tree::Jet,allocator<tree::Jet> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_238_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<tree::Jet,allocator<tree::Jet> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_238_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<tree::Jet,allocator<tree::Jet> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_238_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<tree::Jet,allocator<tree::Jet> >*) G__getstructoffset())->resize((vector<tree::Jet,allocator<tree::Jet> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_238_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<tree::Jet,allocator<tree::Jet> >*) G__getstructoffset())->resize((vector<tree::Jet,allocator<tree::Jet> >::size_type) G__int(libp->para[0]), *((tree::Jet*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_238_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<tree::Jet,allocator<tree::Jet> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_238_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<tree::Jet,allocator<tree::Jet> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_238_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<tree::Jet,allocator<tree::Jet> >::reference obj = ((vector<tree::Jet,allocator<tree::Jet> >*) G__getstructoffset())->operator[]((vector<tree::Jet,allocator<tree::Jet> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_238_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<tree::Jet,allocator<tree::Jet> >::const_reference obj = ((const vector<tree::Jet,allocator<tree::Jet> >*) G__getstructoffset())->operator[]((vector<tree::Jet,allocator<tree::Jet> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_238_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<tree::Jet,allocator<tree::Jet> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<tree::Jet,allocator<tree::Jet> >[n];
     } else {
       p = new((void*) gvp) vector<tree::Jet,allocator<tree::Jet> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<tree::Jet,allocator<tree::Jet> >;
     } else {
       p = new((void*) gvp) vector<tree::Jet,allocator<tree::Jet> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLJetcOallocatorlEtreecLcLJetgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_238_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<tree::Jet,allocator<tree::Jet> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<tree::Jet,allocator<tree::Jet> >((vector<tree::Jet,allocator<tree::Jet> >::size_type) G__int(libp->para[0]), *(tree::Jet*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<tree::Jet,allocator<tree::Jet> >((vector<tree::Jet,allocator<tree::Jet> >::size_type) G__int(libp->para[0]), *(tree::Jet*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<tree::Jet,allocator<tree::Jet> >((vector<tree::Jet,allocator<tree::Jet> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<tree::Jet,allocator<tree::Jet> >((vector<tree::Jet,allocator<tree::Jet> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLJetcOallocatorlEtreecLcLJetgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_238_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<tree::Jet,allocator<tree::Jet> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<tree::Jet,allocator<tree::Jet> >(*(vector<tree::Jet,allocator<tree::Jet> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<tree::Jet,allocator<tree::Jet> >(*(vector<tree::Jet,allocator<tree::Jet> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLJetcOallocatorlEtreecLcLJetgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_238_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<tree::Jet,allocator<tree::Jet> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<tree::Jet,allocator<tree::Jet> >(*((vector<tree::Jet,allocator<tree::Jet> >::const_iterator*) G__int(libp->para[0])), *((vector<tree::Jet,allocator<tree::Jet> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<tree::Jet,allocator<tree::Jet> >(*((vector<tree::Jet,allocator<tree::Jet> >::const_iterator*) G__int(libp->para[0])), *((vector<tree::Jet,allocator<tree::Jet> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLJetcOallocatorlEtreecLcLJetgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_238_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<tree::Jet,allocator<tree::Jet> >& obj = ((vector<tree::Jet,allocator<tree::Jet> >*) G__getstructoffset())->operator=(*(vector<tree::Jet,allocator<tree::Jet> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_238_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<tree::Jet,allocator<tree::Jet> >*) G__getstructoffset())->reserve((vector<tree::Jet,allocator<tree::Jet> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_238_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const tree::Jet& obj = ((vector<tree::Jet,allocator<tree::Jet> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_238_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const tree::Jet& obj = ((vector<tree::Jet,allocator<tree::Jet> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_238_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<tree::Jet,allocator<tree::Jet> >*) G__getstructoffset())->push_back(*(tree::Jet*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_238_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<tree::Jet,allocator<tree::Jet> >*) G__getstructoffset())->swap(*(vector<tree::Jet,allocator<tree::Jet> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_238_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<tree::Jet,allocator<tree::Jet> >::iterator* pobj;
         vector<tree::Jet,allocator<tree::Jet> >::iterator xobj = ((vector<tree::Jet,allocator<tree::Jet> >*) G__getstructoffset())->insert(*((vector<tree::Jet,allocator<tree::Jet> >::iterator*) G__int(libp->para[0])), *(tree::Jet*) libp->para[1].ref);
         pobj = new vector<tree::Jet,allocator<tree::Jet> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_238_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<tree::Jet,allocator<tree::Jet> >*) G__getstructoffset())->insert(*((vector<tree::Jet,allocator<tree::Jet> >::iterator*) G__int(libp->para[0])), *((vector<tree::Jet,allocator<tree::Jet> >::const_iterator*) G__int(libp->para[1]))
, *((vector<tree::Jet,allocator<tree::Jet> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_238_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<tree::Jet,allocator<tree::Jet> >*) G__getstructoffset())->insert(*((vector<tree::Jet,allocator<tree::Jet> >::iterator*) G__int(libp->para[0])), (vector<tree::Jet,allocator<tree::Jet> >::size_type) G__int(libp->para[1])
, *(tree::Jet*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_238_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<tree::Jet,allocator<tree::Jet> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_238_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<tree::Jet,allocator<tree::Jet> >*) G__getstructoffset())->erase(*((vector<tree::Jet,allocator<tree::Jet> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_238_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<tree::Jet,allocator<tree::Jet> >*) G__getstructoffset())->erase(*((vector<tree::Jet,allocator<tree::Jet> >::iterator*) G__int(libp->para[0])), *((vector<tree::Jet,allocator<tree::Jet> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROOT_dicts_238_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<tree::Jet,allocator<tree::Jet> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<tree::Jet,allocator<tree::Jet> > G__TvectorlEtreecLcLJetcOallocatorlEtreecLcLJetgRsPgR;
static int G__ROOT_dicts_238_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<tree::Jet,allocator<tree::Jet> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<tree::Jet,allocator<tree::Jet> >*) (soff+(sizeof(vector<tree::Jet,allocator<tree::Jet> >)*i)))->~G__TvectorlEtreecLcLJetcOallocatorlEtreecLcLJetgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<tree::Jet,allocator<tree::Jet> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<tree::Jet,allocator<tree::Jet> >*) (soff))->~G__TvectorlEtreecLcLJetcOallocatorlEtreecLcLJetgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* tree::Particle */

/* tree::Photon */

/* tree::Jet */

/* vector<tree::Photon,allocator<tree::Photon> > */

/* vector<tree::Particle,allocator<tree::Particle> > */

/* vector<tree::Jet,allocator<tree::Jet> > */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncROOT_dicts {
 public:
  G__Sizep2memfuncROOT_dicts(): p(&G__Sizep2memfuncROOT_dicts::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncROOT_dicts::*p)();
};

size_t G__get_sizep2memfuncROOT_dicts()
{
  G__Sizep2memfuncROOT_dicts a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceROOT_dicts() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ROOT_dictsLN_treecLcLPhoton))) {
     tree::Photon *G__Lderived;
     G__Lderived=(tree::Photon*)0x1000;
     {
       tree::Particle *G__Lpbase=(tree::Particle*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROOT_dictsLN_treecLcLPhoton),G__get_linked_tagnum(&G__ROOT_dictsLN_treecLcLParticle),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ROOT_dictsLN_treecLcLJet))) {
     tree::Jet *G__Lderived;
     G__Lderived=(tree::Jet*)0x1000;
     {
       tree::Particle *G__Lpbase=(tree::Particle*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROOT_dictsLN_treecLcLJet),G__get_linked_tagnum(&G__ROOT_dictsLN_treecLcLParticle),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableROOT_dicts() {

   /* Setting up typedef entry */
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ROOT_dictsLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ROOT_dictsLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ROOT_dictsLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ROOT_dictsLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__ROOT_dictsLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__ROOT_dictsLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__ROOT_dictsLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__ROOT_dictsLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__ROOT_dictsLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__ROOT_dictsLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__ROOT_dictsLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__ROOT_dictsLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__ROOT_dictsLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__ROOT_dictsLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__ROOT_dictsLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__ROOT_dictsLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__ROOT_dictsLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__ROOT_dictsLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__ROOT_dictsLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__ROOT_dictsLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__ROOT_dictsLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__ROOT_dictsLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__ROOT_dictsLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__ROOT_dictsLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__ROOT_dictsLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<tree::Photon>",117,G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLPhotoncOallocatorlEtreecLcLPhotongRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__ROOT_dictsLN_treecLcLPhoton),0,G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLPhotoncOallocatorlEtreecLcLPhotongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__ROOT_dictsLN_treecLcLPhoton),0,G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLPhotoncOallocatorlEtreecLcLPhotongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__ROOT_dictsLN_treecLcLPhoton),256,G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLPhotoncOallocatorlEtreecLcLPhotongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__ROOT_dictsLN_treecLcLPhoton),1,G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLPhotoncOallocatorlEtreecLcLPhotongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__ROOT_dictsLN_treecLcLPhoton),257,G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLPhotoncOallocatorlEtreecLcLPhotongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLPhotoncOallocatorlEtreecLcLPhotongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLPhotoncOallocatorlEtreecLcLPhotongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLPhotoncOallocatorlEtreecLcLPhotongRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLPhotoncOallocatorlEtreecLcLPhotongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ROOT_dictsLN_reverse_iteratorlEvectorlEtreecLcLPhotoncOallocatorlEtreecLcLPhotongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLPhotoncOallocatorlEtreecLcLPhotongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__ROOT_dictsLN_reverse_iteratorlEvectorlEtreecLcLPhotoncOallocatorlEtreecLcLPhotongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLPhotoncOallocatorlEtreecLcLPhotongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ROOT_dictsLN_reverse_iteratorlEvectorlEtreecLcLPhotoncOallocatorlEtreecLcLPhotongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLPhotoncOallocatorlEtreecLcLPhotongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__ROOT_dictsLN_reverse_iteratorlEvectorlEtreecLcLPhotoncOallocatorlEtreecLcLPhotongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLPhotoncOallocatorlEtreecLcLPhotongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<tree::Particle>",117,G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLParticlecOallocatorlEtreecLcLParticlegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__ROOT_dictsLN_treecLcLParticle),0,G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLParticlecOallocatorlEtreecLcLParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__ROOT_dictsLN_treecLcLParticle),0,G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLParticlecOallocatorlEtreecLcLParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__ROOT_dictsLN_treecLcLParticle),256,G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLParticlecOallocatorlEtreecLcLParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__ROOT_dictsLN_treecLcLParticle),1,G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLParticlecOallocatorlEtreecLcLParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__ROOT_dictsLN_treecLcLParticle),257,G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLParticlecOallocatorlEtreecLcLParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLParticlecOallocatorlEtreecLcLParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLParticlecOallocatorlEtreecLcLParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLParticlecOallocatorlEtreecLcLParticlegRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLParticlecOallocatorlEtreecLcLParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ROOT_dictsLN_reverse_iteratorlEvectorlEtreecLcLParticlecOallocatorlEtreecLcLParticlegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLParticlecOallocatorlEtreecLcLParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__ROOT_dictsLN_reverse_iteratorlEvectorlEtreecLcLParticlecOallocatorlEtreecLcLParticlegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLParticlecOallocatorlEtreecLcLParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ROOT_dictsLN_reverse_iteratorlEvectorlEtreecLcLParticlecOallocatorlEtreecLcLParticlegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLParticlecOallocatorlEtreecLcLParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__ROOT_dictsLN_reverse_iteratorlEvectorlEtreecLcLParticlecOallocatorlEtreecLcLParticlegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLParticlecOallocatorlEtreecLcLParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<tree::Jet>",117,G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLJetcOallocatorlEtreecLcLJetgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__ROOT_dictsLN_treecLcLJet),0,G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLJetcOallocatorlEtreecLcLJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__ROOT_dictsLN_treecLcLJet),0,G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLJetcOallocatorlEtreecLcLJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__ROOT_dictsLN_treecLcLJet),256,G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLJetcOallocatorlEtreecLcLJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__ROOT_dictsLN_treecLcLJet),1,G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLJetcOallocatorlEtreecLcLJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__ROOT_dictsLN_treecLcLJet),257,G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLJetcOallocatorlEtreecLcLJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLJetcOallocatorlEtreecLcLJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLJetcOallocatorlEtreecLcLJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLJetcOallocatorlEtreecLcLJetgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLJetcOallocatorlEtreecLcLJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ROOT_dictsLN_reverse_iteratorlEvectorlEtreecLcLJetcOallocatorlEtreecLcLJetgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLJetcOallocatorlEtreecLcLJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__ROOT_dictsLN_reverse_iteratorlEvectorlEtreecLcLJetcOallocatorlEtreecLcLJetgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLJetcOallocatorlEtreecLcLJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ROOT_dictsLN_reverse_iteratorlEvectorlEtreecLcLJetcOallocatorlEtreecLcLJetgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLJetcOallocatorlEtreecLcLJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__ROOT_dictsLN_reverse_iteratorlEvectorlEtreecLcLJetcOallocatorlEtreecLcLJetgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLJetcOallocatorlEtreecLcLJetgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* tree::Particle */
static void G__setup_memvartreecLcLParticle(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ROOT_dictsLN_treecLcLParticle));
   { tree::Particle *p; p=(tree::Particle*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->p)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ROOT_dictsLN_TVector3),-1,-1,1,"p=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* tree::Photon */
static void G__setup_memvartreecLcLPhoton(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ROOT_dictsLN_treecLcLPhoton));
   { tree::Photon *p; p=(tree::Photon*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->full5x5_sigmaIetaIeta)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"full5x5_sigmaIetaIeta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hOverE)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"hOverE=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hasPixelSeed)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"hasPixelSeed=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->passElectronVeto)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"passElectronVeto=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isoChargedHadrons)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"isoChargedHadrons=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isoNeutralHadrons)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"isoNeutralHadrons=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isoPhotons)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"isoPhotons=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isoChargedHadronsWithEA)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"isoChargedHadronsWithEA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isoNeutralHadronsWithEA)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"isoNeutralHadronsWithEA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isoPhotonsWithEA)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"isoPhotonsWithEA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->scRawEnergy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"scRawEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isoWorstChargedHadrons)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"isoWorstChargedHadrons=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->r9)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"r9=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->full5x5_sigmaIetaIphi)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"full5x5_sigmaIetaIphi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->full5x5_e1x3)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"full5x5_e1x3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->full5x5_e2x2)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"full5x5_e2x2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->full5x5_e2x5Max)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"full5x5_e2x5Max=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->full5x5_e5x5)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"full5x5_e5x5=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sigma_eta)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"sigma_eta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sigma_phi)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"sigma_phi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->esEffSigmaRR)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"esEffSigmaRR=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->esEnergy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"esEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mvaValue)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"mvaValue=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isTrue)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"isTrue=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isTrueAlternative)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"isTrueAlternative=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isLoose)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"isLoose=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isMedium)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"isMedium=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isTight)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"isTight=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* tree::Jet */
static void G__setup_memvartreecLcLJet(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ROOT_dictsLN_treecLcLJet));
   { tree::Jet *p; p=(tree::Jet*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->bCSV)-(long)(p)),102,0,0,-1,-1,-1,1,"bCSV=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->chargedHadronEnergy)-(long)(p)),102,0,0,-1,-1,-1,1,"chargedHadronEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->neutralHadronEnergy)-(long)(p)),102,0,0,-1,-1,-1,1,"neutralHadronEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->photonEnergy)-(long)(p)),102,0,0,-1,-1,-1,1,"photonEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->electronEnergy)-(long)(p)),102,0,0,-1,-1,-1,1,"electronEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->muonEnergy)-(long)(p)),102,0,0,-1,-1,-1,1,"muonEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->HFHadronEnergy)-(long)(p)),102,0,0,-1,-1,-1,1,"HFHadronEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->HFEMEnergy)-(long)(p)),102,0,0,-1,-1,-1,1,"HFEMEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->chargedEmEnergy)-(long)(p)),102,0,0,-1,-1,-1,1,"chargedEmEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->chargedMuEnergy)-(long)(p)),102,0,0,-1,-1,-1,1,"chargedMuEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->neutralEmEnergy)-(long)(p)),102,0,0,-1,-1,-1,1,"neutralEmEnergy=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<tree::Photon,allocator<tree::Photon> > */
static void G__setup_memvarvectorlEtreecLcLPhotoncOallocatorlEtreecLcLPhotongRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLPhotoncOallocatorlEtreecLcLPhotongRsPgR));
   { vector<tree::Photon,allocator<tree::Photon> > *p; p=(vector<tree::Photon,allocator<tree::Photon> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<tree::Particle,allocator<tree::Particle> > */
static void G__setup_memvarvectorlEtreecLcLParticlecOallocatorlEtreecLcLParticlegRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLParticlecOallocatorlEtreecLcLParticlegRsPgR));
   { vector<tree::Particle,allocator<tree::Particle> > *p; p=(vector<tree::Particle,allocator<tree::Particle> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<tree::Jet,allocator<tree::Jet> > */
static void G__setup_memvarvectorlEtreecLcLJetcOallocatorlEtreecLcLJetgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLJetcOallocatorlEtreecLcLJetgRsPgR));
   { vector<tree::Jet,allocator<tree::Jet> > *p; p=(vector<tree::Jet,allocator<tree::Jet> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarROOT_dicts() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfunctreecLcLParticle(void) {
   /* tree::Particle */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ROOT_dictsLN_treecLcLParticle));
   // automatic default constructor
   G__memfunc_setup("Particle", 820, G__ROOT_dicts_226_0_1, (int) ('i'), G__get_linked_tagnum(&G__ROOT_dictsLN_treecLcLParticle), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("Particle", 820, G__ROOT_dicts_226_0_2, (int) ('i'), G__get_linked_tagnum(&G__ROOT_dictsLN_treecLcLParticle), -1, 0, 1, 1, 1, 0, "u 'tree::Particle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Particle", 946, G__ROOT_dicts_226_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ROOT_dicts_226_0_4, (int) ('u'), G__get_linked_tagnum(&G__ROOT_dictsLN_treecLcLParticle), -1, 1, 1, 1, 1, 0, "u 'tree::Particle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfunctreecLcLPhoton(void) {
   /* tree::Photon */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ROOT_dictsLN_treecLcLPhoton));
   // automatic default constructor
   G__memfunc_setup("Photon", 632, G__ROOT_dicts_227_0_1, (int) ('i'), G__get_linked_tagnum(&G__ROOT_dictsLN_treecLcLPhoton), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("Photon", 632, G__ROOT_dicts_227_0_2, (int) ('i'), G__get_linked_tagnum(&G__ROOT_dictsLN_treecLcLPhoton), -1, 0, 1, 1, 1, 0, "u 'tree::Photon' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Photon", 758, G__ROOT_dicts_227_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ROOT_dicts_227_0_4, (int) ('u'), G__get_linked_tagnum(&G__ROOT_dictsLN_treecLcLPhoton), -1, 1, 1, 1, 1, 0, "u 'tree::Photon' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfunctreecLcLJet(void) {
   /* tree::Jet */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ROOT_dictsLN_treecLcLJet));
   // automatic default constructor
   G__memfunc_setup("Jet", 291, G__ROOT_dicts_228_0_1, (int) ('i'), G__get_linked_tagnum(&G__ROOT_dictsLN_treecLcLJet), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("Jet", 291, G__ROOT_dicts_228_0_2, (int) ('i'), G__get_linked_tagnum(&G__ROOT_dictsLN_treecLcLJet), -1, 0, 1, 1, 1, 0, "u 'tree::Jet' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Jet", 417, G__ROOT_dicts_228_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ROOT_dicts_228_0_4, (int) ('u'), G__get_linked_tagnum(&G__ROOT_dictsLN_treecLcLJet), -1, 1, 1, 1, 1, 0, "u 'tree::Jet' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEtreecLcLPhotoncOallocatorlEtreecLcLPhotongRsPgR(void) {
   /* vector<tree::Photon,allocator<tree::Photon> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLPhotoncOallocatorlEtreecLcLPhotongRsPgR));
   G__memfunc_setup("at",213,G__ROOT_dicts_230_0_1, 117, G__get_linked_tagnum(&G__ROOT_dictsLN_treecLcLPhoton), G__defined_typename("vector<tree::Photon,allocator<tree::Photon> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<tree::Photon,allocator<tree::Photon> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__ROOT_dicts_230_0_2, 117, G__get_linked_tagnum(&G__ROOT_dictsLN_treecLcLPhoton), G__defined_typename("vector<tree::Photon,allocator<tree::Photon> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<tree::Photon,allocator<tree::Photon> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__ROOT_dicts_230_0_3, 117, G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLPhotoncOallocatorlEtreecLcLPhotongRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__ROOT_dicts_230_0_4, 117, G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLPhotoncOallocatorlEtreecLcLPhotongRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__ROOT_dicts_230_0_5, 117, G__get_linked_tagnum(&G__ROOT_dictsLN_reverse_iteratorlEvectorlEtreecLcLPhotoncOallocatorlEtreecLcLPhotongRsPgRcLcLiteratorgR), G__defined_typename("vector<tree::Photon,allocator<tree::Photon> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__ROOT_dicts_230_0_6, 117, G__get_linked_tagnum(&G__ROOT_dictsLN_reverse_iteratorlEvectorlEtreecLcLPhotoncOallocatorlEtreecLcLPhotongRsPgRcLcLiteratorgR), G__defined_typename("vector<tree::Photon,allocator<tree::Photon> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__ROOT_dicts_230_0_7, 107, -1, G__defined_typename("vector<tree::Photon,allocator<tree::Photon> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__ROOT_dicts_230_0_8, 107, -1, G__defined_typename("vector<tree::Photon,allocator<tree::Photon> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__ROOT_dicts_230_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<tree::Photon,allocator<tree::Photon> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__ROOT_dicts_230_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<tree::Photon,allocator<tree::Photon> >::size_type' 0 - sz u 'tree::Photon' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__ROOT_dicts_230_0_11, 107, -1, G__defined_typename("vector<tree::Photon,allocator<tree::Photon> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__ROOT_dicts_230_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__ROOT_dicts_230_0_13, 117, G__get_linked_tagnum(&G__ROOT_dictsLN_treecLcLPhoton), G__defined_typename("vector<tree::Photon,allocator<tree::Photon> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<tree::Photon,allocator<tree::Photon> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__ROOT_dicts_230_0_14, 117, G__get_linked_tagnum(&G__ROOT_dictsLN_treecLcLPhoton), G__defined_typename("vector<tree::Photon,allocator<tree::Photon> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<tree::Photon,allocator<tree::Photon> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<tree::Photon,allocator<tree::Photon> >",4300,G__ROOT_dicts_230_0_15, 105, G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLPhotoncOallocatorlEtreecLcLPhotongRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<tree::Photon,allocator<tree::Photon> >",4300,G__ROOT_dicts_230_0_16, 105, G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLPhotoncOallocatorlEtreecLcLPhotongRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<tree::Photon,allocator<tree::Photon> >::size_type' 0 - n u 'tree::Photon' - 11 'tree::Photon()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<tree::Photon,allocator<tree::Photon> >",4300,G__ROOT_dicts_230_0_17, 105, G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLPhotoncOallocatorlEtreecLcLPhotongRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<tree::Photon,allocator<tree::Photon> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<tree::Photon,allocator<tree::Photon> >",4300,G__ROOT_dicts_230_0_18, 105, G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLPhotoncOallocatorlEtreecLcLPhotongRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<tree::Photon,allocator<tree::Photon> >::iterator' 'vector<tree::Photon,allocator<tree::Photon> >::const_iterator' 10 - first u 'vector<tree::Photon,allocator<tree::Photon> >::iterator' 'vector<tree::Photon,allocator<tree::Photon> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__ROOT_dicts_230_0_19, 117, G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLPhotoncOallocatorlEtreecLcLPhotongRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<tree::Photon,allocator<tree::Photon> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__ROOT_dicts_230_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<tree::Photon,allocator<tree::Photon> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__ROOT_dicts_230_0_21, 117, G__get_linked_tagnum(&G__ROOT_dictsLN_treecLcLPhoton), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__ROOT_dicts_230_0_22, 117, G__get_linked_tagnum(&G__ROOT_dictsLN_treecLcLPhoton), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__ROOT_dicts_230_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'tree::Photon' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__ROOT_dicts_230_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<tree::Photon,allocator<tree::Photon> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__ROOT_dicts_230_0_25, 117, G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLPhotoncOallocatorlEtreecLcLPhotongRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<tree::Photon,allocator<tree::Photon> >::iterator' - 0 - position u 'tree::Photon' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__ROOT_dicts_230_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<tree::Photon,allocator<tree::Photon> >::iterator' - 0 - position u 'vector<tree::Photon,allocator<tree::Photon> >::iterator' 'vector<tree::Photon,allocator<tree::Photon> >::const_iterator' 10 - first "
"u 'vector<tree::Photon,allocator<tree::Photon> >::iterator' 'vector<tree::Photon,allocator<tree::Photon> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__ROOT_dicts_230_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<tree::Photon,allocator<tree::Photon> >::iterator' - 0 - position k - 'vector<tree::Photon,allocator<tree::Photon> >::size_type' 0 - n "
"u 'tree::Photon' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__ROOT_dicts_230_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__ROOT_dicts_230_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<tree::Photon,allocator<tree::Photon> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__ROOT_dicts_230_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<tree::Photon,allocator<tree::Photon> >::iterator' - 0 - first u 'vector<tree::Photon,allocator<tree::Photon> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__ROOT_dicts_230_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<tree::Photon,allocator<tree::Photon> >", 4426, G__ROOT_dicts_230_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEtreecLcLParticlecOallocatorlEtreecLcLParticlegRsPgR(void) {
   /* vector<tree::Particle,allocator<tree::Particle> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLParticlecOallocatorlEtreecLcLParticlegRsPgR));
   G__memfunc_setup("at",213,G__ROOT_dicts_234_0_1, 117, G__get_linked_tagnum(&G__ROOT_dictsLN_treecLcLParticle), G__defined_typename("vector<tree::Particle,allocator<tree::Particle> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<tree::Particle,allocator<tree::Particle> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__ROOT_dicts_234_0_2, 117, G__get_linked_tagnum(&G__ROOT_dictsLN_treecLcLParticle), G__defined_typename("vector<tree::Particle,allocator<tree::Particle> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<tree::Particle,allocator<tree::Particle> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__ROOT_dicts_234_0_3, 117, G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLParticlecOallocatorlEtreecLcLParticlegRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__ROOT_dicts_234_0_4, 117, G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLParticlecOallocatorlEtreecLcLParticlegRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__ROOT_dicts_234_0_5, 117, G__get_linked_tagnum(&G__ROOT_dictsLN_reverse_iteratorlEvectorlEtreecLcLParticlecOallocatorlEtreecLcLParticlegRsPgRcLcLiteratorgR), G__defined_typename("vector<tree::Particle,allocator<tree::Particle> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__ROOT_dicts_234_0_6, 117, G__get_linked_tagnum(&G__ROOT_dictsLN_reverse_iteratorlEvectorlEtreecLcLParticlecOallocatorlEtreecLcLParticlegRsPgRcLcLiteratorgR), G__defined_typename("vector<tree::Particle,allocator<tree::Particle> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__ROOT_dicts_234_0_7, 107, -1, G__defined_typename("vector<tree::Particle,allocator<tree::Particle> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__ROOT_dicts_234_0_8, 107, -1, G__defined_typename("vector<tree::Particle,allocator<tree::Particle> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__ROOT_dicts_234_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<tree::Particle,allocator<tree::Particle> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__ROOT_dicts_234_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<tree::Particle,allocator<tree::Particle> >::size_type' 0 - sz u 'tree::Particle' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__ROOT_dicts_234_0_11, 107, -1, G__defined_typename("vector<tree::Particle,allocator<tree::Particle> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__ROOT_dicts_234_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__ROOT_dicts_234_0_13, 117, G__get_linked_tagnum(&G__ROOT_dictsLN_treecLcLParticle), G__defined_typename("vector<tree::Particle,allocator<tree::Particle> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<tree::Particle,allocator<tree::Particle> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__ROOT_dicts_234_0_14, 117, G__get_linked_tagnum(&G__ROOT_dictsLN_treecLcLParticle), G__defined_typename("vector<tree::Particle,allocator<tree::Particle> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<tree::Particle,allocator<tree::Particle> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<tree::Particle,allocator<tree::Particle> >",4676,G__ROOT_dicts_234_0_15, 105, G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLParticlecOallocatorlEtreecLcLParticlegRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<tree::Particle,allocator<tree::Particle> >",4676,G__ROOT_dicts_234_0_16, 105, G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLParticlecOallocatorlEtreecLcLParticlegRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<tree::Particle,allocator<tree::Particle> >::size_type' 0 - n u 'tree::Particle' - 11 'tree::Particle()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<tree::Particle,allocator<tree::Particle> >",4676,G__ROOT_dicts_234_0_17, 105, G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLParticlecOallocatorlEtreecLcLParticlegRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<tree::Particle,allocator<tree::Particle> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<tree::Particle,allocator<tree::Particle> >",4676,G__ROOT_dicts_234_0_18, 105, G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLParticlecOallocatorlEtreecLcLParticlegRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<tree::Particle,allocator<tree::Particle> >::iterator' 'vector<tree::Particle,allocator<tree::Particle> >::const_iterator' 10 - first u 'vector<tree::Particle,allocator<tree::Particle> >::iterator' 'vector<tree::Particle,allocator<tree::Particle> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__ROOT_dicts_234_0_19, 117, G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLParticlecOallocatorlEtreecLcLParticlegRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<tree::Particle,allocator<tree::Particle> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__ROOT_dicts_234_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<tree::Particle,allocator<tree::Particle> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__ROOT_dicts_234_0_21, 117, G__get_linked_tagnum(&G__ROOT_dictsLN_treecLcLParticle), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__ROOT_dicts_234_0_22, 117, G__get_linked_tagnum(&G__ROOT_dictsLN_treecLcLParticle), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__ROOT_dicts_234_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'tree::Particle' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__ROOT_dicts_234_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<tree::Particle,allocator<tree::Particle> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__ROOT_dicts_234_0_25, 117, G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLParticlecOallocatorlEtreecLcLParticlegRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<tree::Particle,allocator<tree::Particle> >::iterator' - 0 - position u 'tree::Particle' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__ROOT_dicts_234_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<tree::Particle,allocator<tree::Particle> >::iterator' - 0 - position u 'vector<tree::Particle,allocator<tree::Particle> >::iterator' 'vector<tree::Particle,allocator<tree::Particle> >::const_iterator' 10 - first "
"u 'vector<tree::Particle,allocator<tree::Particle> >::iterator' 'vector<tree::Particle,allocator<tree::Particle> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__ROOT_dicts_234_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<tree::Particle,allocator<tree::Particle> >::iterator' - 0 - position k - 'vector<tree::Particle,allocator<tree::Particle> >::size_type' 0 - n "
"u 'tree::Particle' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__ROOT_dicts_234_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__ROOT_dicts_234_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<tree::Particle,allocator<tree::Particle> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__ROOT_dicts_234_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<tree::Particle,allocator<tree::Particle> >::iterator' - 0 - first u 'vector<tree::Particle,allocator<tree::Particle> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__ROOT_dicts_234_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<tree::Particle,allocator<tree::Particle> >", 4802, G__ROOT_dicts_234_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEtreecLcLJetcOallocatorlEtreecLcLJetgRsPgR(void) {
   /* vector<tree::Jet,allocator<tree::Jet> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLJetcOallocatorlEtreecLcLJetgRsPgR));
   G__memfunc_setup("at",213,G__ROOT_dicts_238_0_1, 117, G__get_linked_tagnum(&G__ROOT_dictsLN_treecLcLJet), G__defined_typename("vector<tree::Jet,allocator<tree::Jet> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<tree::Jet,allocator<tree::Jet> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__ROOT_dicts_238_0_2, 117, G__get_linked_tagnum(&G__ROOT_dictsLN_treecLcLJet), G__defined_typename("vector<tree::Jet,allocator<tree::Jet> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<tree::Jet,allocator<tree::Jet> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__ROOT_dicts_238_0_3, 117, G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLJetcOallocatorlEtreecLcLJetgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__ROOT_dicts_238_0_4, 117, G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLJetcOallocatorlEtreecLcLJetgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__ROOT_dicts_238_0_5, 117, G__get_linked_tagnum(&G__ROOT_dictsLN_reverse_iteratorlEvectorlEtreecLcLJetcOallocatorlEtreecLcLJetgRsPgRcLcLiteratorgR), G__defined_typename("vector<tree::Jet,allocator<tree::Jet> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__ROOT_dicts_238_0_6, 117, G__get_linked_tagnum(&G__ROOT_dictsLN_reverse_iteratorlEvectorlEtreecLcLJetcOallocatorlEtreecLcLJetgRsPgRcLcLiteratorgR), G__defined_typename("vector<tree::Jet,allocator<tree::Jet> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__ROOT_dicts_238_0_7, 107, -1, G__defined_typename("vector<tree::Jet,allocator<tree::Jet> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__ROOT_dicts_238_0_8, 107, -1, G__defined_typename("vector<tree::Jet,allocator<tree::Jet> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__ROOT_dicts_238_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<tree::Jet,allocator<tree::Jet> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__ROOT_dicts_238_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<tree::Jet,allocator<tree::Jet> >::size_type' 0 - sz u 'tree::Jet' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__ROOT_dicts_238_0_11, 107, -1, G__defined_typename("vector<tree::Jet,allocator<tree::Jet> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__ROOT_dicts_238_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__ROOT_dicts_238_0_13, 117, G__get_linked_tagnum(&G__ROOT_dictsLN_treecLcLJet), G__defined_typename("vector<tree::Jet,allocator<tree::Jet> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<tree::Jet,allocator<tree::Jet> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__ROOT_dicts_238_0_14, 117, G__get_linked_tagnum(&G__ROOT_dictsLN_treecLcLJet), G__defined_typename("vector<tree::Jet,allocator<tree::Jet> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<tree::Jet,allocator<tree::Jet> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<tree::Jet,allocator<tree::Jet> >",3618,G__ROOT_dicts_238_0_15, 105, G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLJetcOallocatorlEtreecLcLJetgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<tree::Jet,allocator<tree::Jet> >",3618,G__ROOT_dicts_238_0_16, 105, G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLJetcOallocatorlEtreecLcLJetgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<tree::Jet,allocator<tree::Jet> >::size_type' 0 - n u 'tree::Jet' - 11 'tree::Jet()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<tree::Jet,allocator<tree::Jet> >",3618,G__ROOT_dicts_238_0_17, 105, G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLJetcOallocatorlEtreecLcLJetgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<tree::Jet,allocator<tree::Jet> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<tree::Jet,allocator<tree::Jet> >",3618,G__ROOT_dicts_238_0_18, 105, G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLJetcOallocatorlEtreecLcLJetgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<tree::Jet,allocator<tree::Jet> >::iterator' 'vector<tree::Jet,allocator<tree::Jet> >::const_iterator' 10 - first u 'vector<tree::Jet,allocator<tree::Jet> >::iterator' 'vector<tree::Jet,allocator<tree::Jet> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__ROOT_dicts_238_0_19, 117, G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLJetcOallocatorlEtreecLcLJetgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<tree::Jet,allocator<tree::Jet> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__ROOT_dicts_238_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<tree::Jet,allocator<tree::Jet> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__ROOT_dicts_238_0_21, 117, G__get_linked_tagnum(&G__ROOT_dictsLN_treecLcLJet), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__ROOT_dicts_238_0_22, 117, G__get_linked_tagnum(&G__ROOT_dictsLN_treecLcLJet), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__ROOT_dicts_238_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'tree::Jet' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__ROOT_dicts_238_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<tree::Jet,allocator<tree::Jet> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__ROOT_dicts_238_0_25, 117, G__get_linked_tagnum(&G__ROOT_dictsLN_vectorlEtreecLcLJetcOallocatorlEtreecLcLJetgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<tree::Jet,allocator<tree::Jet> >::iterator' - 0 - position u 'tree::Jet' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__ROOT_dicts_238_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<tree::Jet,allocator<tree::Jet> >::iterator' - 0 - position u 'vector<tree::Jet,allocator<tree::Jet> >::iterator' 'vector<tree::Jet,allocator<tree::Jet> >::const_iterator' 10 - first "
"u 'vector<tree::Jet,allocator<tree::Jet> >::iterator' 'vector<tree::Jet,allocator<tree::Jet> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__ROOT_dicts_238_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<tree::Jet,allocator<tree::Jet> >::iterator' - 0 - position k - 'vector<tree::Jet,allocator<tree::Jet> >::size_type' 0 - n "
"u 'tree::Jet' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__ROOT_dicts_238_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__ROOT_dicts_238_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<tree::Jet,allocator<tree::Jet> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__ROOT_dicts_238_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<tree::Jet,allocator<tree::Jet> >::iterator' - 0 - first u 'vector<tree::Jet,allocator<tree::Jet> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__ROOT_dicts_238_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<tree::Jet,allocator<tree::Jet> >", 3744, G__ROOT_dicts_238_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncROOT_dicts() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalROOT_dicts() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcROOT_dicts() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__ROOT_dictsLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__ROOT_dictsLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ROOT_dictsLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__ROOT_dictsLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ROOT_dictsLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__ROOT_dictsLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__ROOT_dictsLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__ROOT_dictsLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__ROOT_dictsLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__ROOT_dictsLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__ROOT_dictsLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__ROOT_dictsLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__ROOT_dictsLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__ROOT_dictsLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__ROOT_dictsLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__ROOT_dictsLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__ROOT_dictsLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__ROOT_dictsLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__ROOT_dictsLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__ROOT_dictsLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__ROOT_dictsLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__ROOT_dictsLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__ROOT_dictsLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__ROOT_dictsLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__ROOT_dictsLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__ROOT_dictsLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__ROOT_dictsLN_tree = { "tree" , 110 , -1 };
G__linked_taginfo G__ROOT_dictsLN_treecLcLParticle = { "tree::Particle" , 99 , -1 };
G__linked_taginfo G__ROOT_dictsLN_treecLcLPhoton = { "tree::Photon" , 99 , -1 };
G__linked_taginfo G__ROOT_dictsLN_treecLcLJet = { "tree::Jet" , 99 , -1 };
G__linked_taginfo G__ROOT_dictsLN_vectorlEtreecLcLPhotoncOallocatorlEtreecLcLPhotongRsPgR = { "vector<tree::Photon,allocator<tree::Photon> >" , 99 , -1 };
G__linked_taginfo G__ROOT_dictsLN_vectorlEtreecLcLPhotoncOallocatorlEtreecLcLPhotongRsPgRcLcLiterator = { "vector<tree::Photon,allocator<tree::Photon> >::iterator" , 99 , -1 };
G__linked_taginfo G__ROOT_dictsLN_reverse_iteratorlEvectorlEtreecLcLPhotoncOallocatorlEtreecLcLPhotongRsPgRcLcLiteratorgR = { "reverse_iterator<vector<tree::Photon,allocator<tree::Photon> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ROOT_dictsLN_vectorlEtreecLcLParticlecOallocatorlEtreecLcLParticlegRsPgR = { "vector<tree::Particle,allocator<tree::Particle> >" , 99 , -1 };
G__linked_taginfo G__ROOT_dictsLN_vectorlEtreecLcLParticlecOallocatorlEtreecLcLParticlegRsPgRcLcLiterator = { "vector<tree::Particle,allocator<tree::Particle> >::iterator" , 99 , -1 };
G__linked_taginfo G__ROOT_dictsLN_reverse_iteratorlEvectorlEtreecLcLParticlecOallocatorlEtreecLcLParticlegRsPgRcLcLiteratorgR = { "reverse_iterator<vector<tree::Particle,allocator<tree::Particle> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ROOT_dictsLN_vectorlEtreecLcLJetcOallocatorlEtreecLcLJetgRsPgR = { "vector<tree::Jet,allocator<tree::Jet> >" , 99 , -1 };
G__linked_taginfo G__ROOT_dictsLN_vectorlEtreecLcLJetcOallocatorlEtreecLcLJetgRsPgRcLcLiterator = { "vector<tree::Jet,allocator<tree::Jet> >::iterator" , 99 , -1 };
G__linked_taginfo G__ROOT_dictsLN_reverse_iteratorlEvectorlEtreecLcLJetcOallocatorlEtreecLcLJetgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<tree::Jet,allocator<tree::Jet> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableROOT_dicts() {
  G__ROOT_dictsLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__ROOT_dictsLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ROOT_dictsLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__ROOT_dictsLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ROOT_dictsLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__ROOT_dictsLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__ROOT_dictsLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__ROOT_dictsLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__ROOT_dictsLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__ROOT_dictsLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__ROOT_dictsLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__ROOT_dictsLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__ROOT_dictsLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__ROOT_dictsLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__ROOT_dictsLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__ROOT_dictsLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__ROOT_dictsLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__ROOT_dictsLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__ROOT_dictsLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__ROOT_dictsLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__ROOT_dictsLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__ROOT_dictsLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__ROOT_dictsLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__ROOT_dictsLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__ROOT_dictsLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__ROOT_dictsLN_TVector3.tagnum = -1 ;
  G__ROOT_dictsLN_tree.tagnum = -1 ;
  G__ROOT_dictsLN_treecLcLParticle.tagnum = -1 ;
  G__ROOT_dictsLN_treecLcLPhoton.tagnum = -1 ;
  G__ROOT_dictsLN_treecLcLJet.tagnum = -1 ;
  G__ROOT_dictsLN_vectorlEtreecLcLPhotoncOallocatorlEtreecLcLPhotongRsPgR.tagnum = -1 ;
  G__ROOT_dictsLN_vectorlEtreecLcLPhotoncOallocatorlEtreecLcLPhotongRsPgRcLcLiterator.tagnum = -1 ;
  G__ROOT_dictsLN_reverse_iteratorlEvectorlEtreecLcLPhotoncOallocatorlEtreecLcLPhotongRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ROOT_dictsLN_vectorlEtreecLcLParticlecOallocatorlEtreecLcLParticlegRsPgR.tagnum = -1 ;
  G__ROOT_dictsLN_vectorlEtreecLcLParticlecOallocatorlEtreecLcLParticlegRsPgRcLcLiterator.tagnum = -1 ;
  G__ROOT_dictsLN_reverse_iteratorlEvectorlEtreecLcLParticlecOallocatorlEtreecLcLParticlegRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ROOT_dictsLN_vectorlEtreecLcLJetcOallocatorlEtreecLcLJetgRsPgR.tagnum = -1 ;
  G__ROOT_dictsLN_vectorlEtreecLcLJetcOallocatorlEtreecLcLJetgRsPgRcLcLiterator.tagnum = -1 ;
  G__ROOT_dictsLN_reverse_iteratorlEvectorlEtreecLcLJetcOallocatorlEtreecLcLJetgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableROOT_dicts() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__ROOT_dictsLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__ROOT_dictsLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ROOT_dictsLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__ROOT_dictsLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ROOT_dictsLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__ROOT_dictsLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__ROOT_dictsLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ROOT_dictsLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ROOT_dictsLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ROOT_dictsLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ROOT_dictsLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ROOT_dictsLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ROOT_dictsLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ROOT_dictsLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ROOT_dictsLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ROOT_dictsLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ROOT_dictsLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ROOT_dictsLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ROOT_dictsLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ROOT_dictsLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ROOT_dictsLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__ROOT_dictsLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ROOT_dictsLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__ROOT_dictsLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ROOT_dictsLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__ROOT_dictsLN_TVector3);
   G__get_linked_tagnum_fwd(&G__ROOT_dictsLN_tree);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ROOT_dictsLN_treecLcLParticle),sizeof(tree::Particle),-1,262144,(char*)NULL,G__setup_memvartreecLcLParticle,G__setup_memfunctreecLcLParticle);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ROOT_dictsLN_treecLcLPhoton),sizeof(tree::Photon),-1,262144,(char*)NULL,G__setup_memvartreecLcLPhoton,G__setup_memfunctreecLcLPhoton);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ROOT_dictsLN_treecLcLJet),sizeof(tree::Jet),-1,262144,(char*)NULL,G__setup_memvartreecLcLJet,G__setup_memfunctreecLcLJet);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ROOT_dictsLN_vectorlEtreecLcLPhotoncOallocatorlEtreecLcLPhotongRsPgR),sizeof(vector<tree::Photon,allocator<tree::Photon> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEtreecLcLPhotoncOallocatorlEtreecLcLPhotongRsPgR,G__setup_memfuncvectorlEtreecLcLPhotoncOallocatorlEtreecLcLPhotongRsPgR);
   G__get_linked_tagnum_fwd(&G__ROOT_dictsLN_vectorlEtreecLcLPhotoncOallocatorlEtreecLcLPhotongRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__ROOT_dictsLN_reverse_iteratorlEvectorlEtreecLcLPhotoncOallocatorlEtreecLcLPhotongRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ROOT_dictsLN_vectorlEtreecLcLParticlecOallocatorlEtreecLcLParticlegRsPgR),sizeof(vector<tree::Particle,allocator<tree::Particle> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEtreecLcLParticlecOallocatorlEtreecLcLParticlegRsPgR,G__setup_memfuncvectorlEtreecLcLParticlecOallocatorlEtreecLcLParticlegRsPgR);
   G__get_linked_tagnum_fwd(&G__ROOT_dictsLN_vectorlEtreecLcLParticlecOallocatorlEtreecLcLParticlegRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__ROOT_dictsLN_reverse_iteratorlEvectorlEtreecLcLParticlecOallocatorlEtreecLcLParticlegRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ROOT_dictsLN_vectorlEtreecLcLJetcOallocatorlEtreecLcLJetgRsPgR),sizeof(vector<tree::Jet,allocator<tree::Jet> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEtreecLcLJetcOallocatorlEtreecLcLJetgRsPgR,G__setup_memfuncvectorlEtreecLcLJetcOallocatorlEtreecLcLJetgRsPgR);
   G__get_linked_tagnum_fwd(&G__ROOT_dictsLN_vectorlEtreecLcLJetcOallocatorlEtreecLcLJetgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__ROOT_dictsLN_reverse_iteratorlEvectorlEtreecLcLJetcOallocatorlEtreecLcLJetgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupROOT_dicts(void) {
  G__check_setup_version(30051515,"G__cpp_setupROOT_dicts()");
  G__set_cpp_environmentROOT_dicts();
  G__cpp_setup_tagtableROOT_dicts();

  G__cpp_setup_inheritanceROOT_dicts();

  G__cpp_setup_typetableROOT_dicts();

  G__cpp_setup_memvarROOT_dicts();

  G__cpp_setup_memfuncROOT_dicts();
  G__cpp_setup_globalROOT_dicts();
  G__cpp_setup_funcROOT_dicts();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncROOT_dicts();
  return;
}
class G__cpp_setup_initROOT_dicts {
  public:
    G__cpp_setup_initROOT_dicts() { G__add_setup_func("ROOT_dicts",(G__incsetup)(&G__cpp_setupROOT_dicts)); G__call_setup_funcs(); }
   ~G__cpp_setup_initROOT_dicts() { G__remove_setup_func("ROOT_dicts"); }
};
G__cpp_setup_initROOT_dicts G__cpp_setup_initializerROOT_dicts;

